* Schedule
- On the 1st, of February the testing scenarios, methodology etc. should be agreed upon - it should be written before 1st, but there is no time to agree on it in the first week of the month due to time constraints.
- In the first (if second, we might have trouble) week of February a pilot testing should be done - preferred subjects - Vojtěch Polášek and someone with Windows (very likely most of them will use that OS)
- Main testing should occur in February, first week of March might be acceptable
* General notes
- Subjects - visually impaired people - blind are preferred over partially sighted, they should be at least somewhat capable with a computer (the entry bar for the Linux group is currently much higher as the install is not straight-forward in any way)
- Very likely a Jitsi meet call (thanks, Covid-19).
* Objectives
- For each of the key application areas find out how memorable, efficient to use, easy to learn and so on (see below for details) the area actually is
- Also gather suggestions for usability improvements of the area
- Quantitatively evaluate the usability of the application using the System usability Scale (see below for the questions)
* Plan
** Before meeting
- The subject will get the user docs (including download links and the scenarios)
- He'll be encouraged to try the scenarios and whatever he sees fit
- The participants will have at least a week of time for their own testing and possible questions (hopefully no new bugs will be found during this period)
- Will know about the meeting and its future recording and the recording's deletion timeframe and related things
** The meeting
- Duration approx. one hour
- Very likely a Jitsi meet call, preferrably with Chromium based browser so we can have a recording of the computer audio as well
- The participant will be asked about the confirmation of recording the interview - if declined, the meeting will continue nonetheless, but writing actionable notes might prove somewhat harder
- The general structure of the meeting will be explained
- Some initial questions will be asked
  - General classification of their visual impairment - completely blind/partially sighted or something like that
  - How would you rate your computer skills
  - Did you use similar apps (desktop/mobile) and how often/how?
  - A rough age classification (not sure whether the subjects are age diverse enough so this metric matters)
*** Part I
- The participant will be asked about their opinions after the free testing
- No specific 	questions will be asked yet
*** Part II - Application explanation, basic testing scenarios
- A basic explanation of the app
- Will explain basic concepts - area selection, walking, near by queries, simple search etc.
- The scenario from the user docs will be used for demonstration purposes
- If the first part indicates that the participant used the app enough, this part might be skipped entirely
*** Part III
- The participant will be asked whether he wants to try anything he did not try during the week, ask any questions etc.
- Might be skipped if the participant looks like he didn't test anything, e. g. has no experiences with the app and don't seems to be as big a tinkerer
- Of course if he provides all the feedback in the first or second part, this might be skipped as well
*** The questions
- Some per area questions, see below for more details
- These will not have a numeric answer for the survey data
- After the specific area questions, the System usability scale will be used to evaluate the application as a whole
**** Areas of interest for the area specific questions
- Area selection
- New area request UI
- Main window - including the menu structure, shortcuts, walking behaviors etc.
- The near by objects dialog + the actions on objects
- The search UI
**** Area specific questions
The following questions will be asked during the interview for each area (i would prefer to ask them rather than deducing the answers). For some areas (see below), there are more specific questions as well.
- How hard was to learn the specific part of the application?
- How would you make the area more easy to use?
- How hard was to remember the specific area, and what was hard about it?
- How was the experience during error conditions?
- How satisfied you were with the area?
***** Main window
Some of these might not be asked directly, the user might provide the answer first
- A curious pondering whether a 180 degree turn would be really useful and how much
- When turning manually, would the user rather hear a clock like direction, north/west/etc. direction or the degrees reading?
- When announcing interesting objects, is the current behavior sufficient or do we want some more configuration (not announcing some kinds of objects etc.)
- Is it useful to have the ctrl+shift+l command?
***** Near by objects dialog
- Which object actions would you find useful?
- How would you improve the discoverability of the object/property actions? Yeah, they should be in the manual, but maybe there might be some other ways?
***** Navigation
- If the user gets lost, find out what information would help the user find where he is
**** Overall scoring - System usability Scale
The following questions will be asked, with answers on a 5 level scale starting from strongly disagree to strongly agree:
1. I think that I would like to use Feel the Streets frequently.
2. I found Feel the Streets unnecessarily complex.
3. I thought Feel the Streets was easy to use.
4. I think that I would need the support of a technical person to be able to use Feel the Streets.
5. I found the various functions in Feel the Streets were well integrated.
6. I thought there was too much inconsistency in Feel the Streets.
7. I would imagine that most people would learn to use Feel the Streets very quickly.
8. I found Feel the Streets very cumbersome to use.
9. I felt very confident using Feel the Streets.
10. I needed to learn a lot of things before I could get going with Feel the Streets.
For the scoring methodology and evaluation of the resulting metric see for example https://www.usability.gov/how-to-and-tools/methods/system-usability-scale.html